{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\megas\\\\Desktop\\\\Uni\\\\Quinto\\\\2\\xBA Cuatri\\\\Aplicaciones Web\\\\pr-final-aw-no-clase\\\\pr-final-aw-no-clase\\\\frontend\\\\src\\\\components\\\\ingrediente.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Grid from '@mui/material/Grid';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CheckBox from '@mui/material/Checkbox';\nimport Container from '@mui/material/Container';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mesa(argumentos) {\n  _s();\n\n  const [ingredientes, setIngredientes] = useState([]);\n  const [ingredientesCompletos, setIngredientesCompletos] = useState([]);\n  const [seleccionIngrediente, setSeleccionIngrediente] = useState();\n  useEffect(() => {\n    cargarIngredientes(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function cargarIngredientes() {\n    axios.get(`http://localhost:3053/ingredientes`, {}).then(response => {\n      var lista = [];\n      var listaCompleta = [];\n      response.data.forEach(element => {\n        lista.push(element.nombre);\n        listaCompleta.push(element);\n      });\n      setIngredientes(lista);\n      setIngredientesCompletos(listaCompleta);\n    });\n  }\n\n  const ingredienteseleccionIngredientes = componente => {\n    ingredientesCompletos.forEach(element => {\n      if (element.nombre === componente) {\n        argumentos.ingredienteSeleccionado(argumentos.posicion, element._id);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 1,\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      fullWidth: true,\n      options: ingredientes,\n      autoHighlight: true,\n      value: seleccionIngrediente,\n      inputValue: seleccionIngrediente,\n      onClick: (event, ingrediente) => {\n        setSeleccionIngrediente(ingrediente);\n        ingredienteseleccionIngredientes(ingrediente);\n      },\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        label: \"Ingrediente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        xs: 12,\n        sm: 6,\n        fullWidth: true,\n        required: true,\n        label: \"Cantidad\",\n        type: \"number\",\n        id: \"cantidad\",\n        name: \"cantidad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mesa, \"3FUD7q+7syrg07wKyRA0jBrWWJA=\");\n\n_c = Mesa;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mesa\");","map":{"version":3,"sources":["C:/Users/megas/Desktop/Uni/Quinto/2ยบ Cuatri/Aplicaciones Web/pr-final-aw-no-clase/pr-final-aw-no-clase/frontend/src/components/ingrediente.js"],"names":["React","useEffect","useState","axios","Grid","Autocomplete","Card","CardContent","CheckBox","Container","FormControlLabel","TextField","Mesa","argumentos","ingredientes","setIngredientes","ingredientesCompletos","setIngredientesCompletos","seleccionIngrediente","setSeleccionIngrediente","cargarIngredientes","get","then","response","lista","listaCompleta","data","forEach","element","push","nombre","ingredienteseleccionIngredientes","componente","ingredienteSeleccionado","posicion","_id","event","ingrediente","params"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\n\r\nimport axios from 'axios';\r\nimport Grid from '@mui/material/Grid';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CheckBox from '@mui/material/Checkbox';\r\nimport Container from '@mui/material/Container';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport default function Mesa(argumentos) {\r\n    const [ingredientes, setIngredientes]=useState([]);\r\n    const [ingredientesCompletos, setIngredientesCompletos]=useState([]);\r\n    const [seleccionIngrediente, setSeleccionIngrediente]=useState();\r\n    \r\n\r\n    useEffect(() => {\r\n        cargarIngredientes();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n\r\n    function cargarIngredientes(){\r\n        axios.get(`http://localhost:3053/ingredientes`, {}).then((response) => {\r\n            var lista = [];\r\n            var listaCompleta = [];\r\n            response.data.forEach(element => {\r\n                lista.push(element.nombre);\r\n                listaCompleta.push(element);\r\n            });\r\n            setIngredientes(lista);\r\n            setIngredientesCompletos(listaCompleta);\r\n        });\r\n    }\r\n\r\n    const ingredienteseleccionIngredientes = (componente) => {\r\n        ingredientesCompletos.forEach(element => {\r\n            if(element.nombre === componente){\r\n                argumentos.ingredienteSeleccionado(argumentos.posicion, element._id);\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Autocomplete\r\n                fullWidth\r\n                options={ingredientes}\r\n                autoHighlight\r\n                value={seleccionIngrediente}\r\n                inputValue={seleccionIngrediente}\r\n                onClick={(event, ingrediente) => {\r\n                    setSeleccionIngrediente(ingrediente);\r\n                    ingredienteseleccionIngredientes(ingrediente);\r\n                }}\r\n                renderInput={(params) => <TextField {...params} label=\"Ingrediente\"/>}\r\n            />\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField xs={12} sm={6} fullWidth required label='Cantidad' type=\"number\" id=\"cantidad\" name=\"cantidad\" />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}