{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\megas\\\\Desktop\\\\Uni\\\\Quinto\\\\2\\xBA Cuatri\\\\Aplicaciones Web\\\\pr-final-aw-no-clase\\\\pr-final-aw-no-clase\\\\frontend\\\\src\\\\components\\\\comensal.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Typography } from '@mui/material';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport m from '../fotos/EsperandoMini.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mesa(argumentos) {\n  _s();\n\n  const [primeros, setPrimeros] = useState([]);\n  const [primerosCompletos, setPrimerosCompletos] = useState([]);\n  const [seleccionPrimero, setSeleccionPrimero] = useState();\n  const [segundos, setSegundos] = useState([]);\n  const [segundosCompletos, setSegundosCompletos] = useState([]);\n  const [seleccionSegundo, setSeleccionSegundo] = useState();\n  const [postres, setPostres] = useState([]);\n  const [postresCompletos, setPostresCompletos] = useState([]);\n  const [seleccionPostre, setSeleccionPostre] = useState();\n  const [bebidas, setBebidas] = useState([]);\n  const [bebidasCompletos, setBebidassCompletos] = useState([]);\n  const [seleccionBebida, setSeleccionBebida] = useState();\n  useEffect(() => {\n    cargarPlatos(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function cargarPlatos() {\n    axios.get(`http://localhost:3053/platos/primeros`, {}).then(response => {\n      var lista = [];\n      var listaCompleta = [];\n      response.data.forEach(element => {\n        lista.push(element.nombre);\n        listaCompleta.push(element);\n      });\n      setPrimeros(lista);\n      setPrimerosCompletos(listaCompleta);\n    });\n    axios.get(`http://localhost:3053/platos/segundos`, {}).then(response => {\n      var lista = [];\n      var listaCompleta = [];\n      response.data.forEach(element => {\n        lista.push(element.nombre);\n        listaCompleta.push(element);\n      });\n      setSegundos(lista);\n      setSegundosCompletos(listaCompleta);\n    });\n    axios.get(`http://localhost:3053/platos/postres`, {}).then(response => {\n      var lista = [];\n      var listaCompleta = [];\n      response.data.forEach(element => {\n        lista.push(element.nombre);\n        listaCompleta.push(element);\n      });\n      setPostres(lista);\n      setPostresCompletos(listaCompleta);\n    });\n    axios.get(`http://localhost:3053/platos/bebidas`, {}).then(response => {\n      var lista = [];\n      var listaCompleta = [];\n      response.data.forEach(element => {\n        lista.push(element.nombre);\n        listaCompleta.push(element);\n      });\n      setBebidas(lista);\n      setBebidassCompletos(listaCompleta);\n    });\n  }\n\n  const primerPlato = plato => {\n    primerosCompletos.forEach(element => {\n      if (element.nombre === plato) {\n        argumentos.primero(argumentos.posicion, element);\n      }\n    });\n  };\n\n  const segundoPlato = plato => {\n    segundosCompletos.forEach(element => {\n      if (element.nombre === plato) {\n        argumentos.segundo(argumentos.posicion, element);\n      }\n    });\n  };\n\n  const postrePlato = plato => {\n    postresCompletos.forEach(element => {\n      if (element.nombre === plato) {\n        argumentos.postre(argumentos.posicion, element);\n      }\n    });\n  };\n\n  const bebidaElegida = plato => {\n    bebidasCompletos.forEach(element => {\n      if (element.nombre === plato) {\n        argumentos.bebida(argumentos.posicion, element);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    spacing: 1,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        direction: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        maxWidth: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: m,\n            alt: \"Mesa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            fullWidth: true,\n            options: primeros,\n            autoHighlight: true,\n            value: seleccionPrimero,\n            inputValue: seleccionPrimero,\n            onChange: (event, primero) => {\n              setSeleccionPrimero(primero);\n              primerPlato(primero);\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Primero\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            fullWidth: true,\n            options: segundos,\n            value: seleccionSegundo,\n            inputValue: seleccionSegundo,\n            onChange: (event, segundo) => {\n              setSeleccionSegundo(segundo);\n              segundoPlato(segundo);\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Segundo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            fullWidth: true,\n            options: postres,\n            value: seleccionPostre,\n            inputValue: seleccionPostre,\n            onChange: (event, postre) => {\n              setSeleccionPostre(postre);\n              postrePlato(postre);\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Postre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            fullWidth: true,\n            options: bebidas,\n            value: seleccionBebida,\n            inputValue: seleccionBebida,\n            onChange: (event, bebida) => {\n              setSeleccionBebida(bebida);\n              bebidaElegida(bebida);\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Bebida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"intolerancias\",\n            label: \"intolerancias\",\n            type: \"text\",\n            id: \"intolerancias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            name: \"aclaraciones\",\n            label: \"Aclaraciones\",\n            type: \"text\",\n            id: \"aclaraciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            children: \" Pan incluido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mesa, \"8rPwepPDKTgzJjBHJ8PmUHWiFQI=\");\n\n_c = Mesa;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mesa\");","map":{"version":3,"sources":["C:/Users/megas/Desktop/Uni/Quinto/2ยบ Cuatri/Aplicaciones Web/pr-final-aw-no-clase/pr-final-aw-no-clase/frontend/src/components/comensal.js"],"names":["React","useEffect","useState","axios","Typography","Autocomplete","Card","CardContent","Container","Grid","TextField","m","Mesa","argumentos","primeros","setPrimeros","primerosCompletos","setPrimerosCompletos","seleccionPrimero","setSeleccionPrimero","segundos","setSegundos","segundosCompletos","setSegundosCompletos","seleccionSegundo","setSeleccionSegundo","postres","setPostres","postresCompletos","setPostresCompletos","seleccionPostre","setSeleccionPostre","bebidas","setBebidas","bebidasCompletos","setBebidassCompletos","seleccionBebida","setSeleccionBebida","cargarPlatos","get","then","response","lista","listaCompleta","data","forEach","element","push","nombre","primerPlato","plato","primero","posicion","segundoPlato","segundo","postrePlato","postre","bebidaElegida","bebida","height","display","flexDirection","flexGrow","event","params"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { Typography } from '@mui/material';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport m from '../fotos/EsperandoMini.png';\r\n\r\nexport default function Mesa(argumentos) {\r\n    const [primeros, setPrimeros]=useState([]);\r\n    const [primerosCompletos, setPrimerosCompletos]=useState([]);\r\n    const [seleccionPrimero, setSeleccionPrimero]=useState();\r\n\r\n    const [segundos, setSegundos]=useState([]);\r\n    const [segundosCompletos, setSegundosCompletos]=useState([]);\r\n    const [seleccionSegundo, setSeleccionSegundo]=useState();\r\n    \r\n\r\n    const [postres, setPostres]=useState([]);\r\n    const [postresCompletos, setPostresCompletos]=useState([]);\r\n    const [seleccionPostre, setSeleccionPostre]=useState();\r\n\r\n    const [bebidas, setBebidas]=useState([]);\r\n    const [bebidasCompletos, setBebidassCompletos]=useState([]);\r\n    const [seleccionBebida, setSeleccionBebida]=useState();\r\n\r\n    useEffect(() => {\r\n        cargarPlatos();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    function cargarPlatos(){\r\n        axios.get(`http://localhost:3053/platos/primeros`, {}).then((response) => {\r\n            var lista = [];\r\n            var listaCompleta = [];\r\n            response.data.forEach(element => {\r\n                lista.push(element.nombre);\r\n                listaCompleta.push(element);\r\n            });\r\n            setPrimeros(lista);\r\n            setPrimerosCompletos(listaCompleta);\r\n        });\r\n\r\n        axios.get(`http://localhost:3053/platos/segundos`, {}).then((response) => {\r\n            var lista = [];\r\n            var listaCompleta = [];\r\n            response.data.forEach(element => {\r\n                lista.push(element.nombre);\r\n                listaCompleta.push(element);\r\n            });\r\n            setSegundos(lista);\r\n            setSegundosCompletos(listaCompleta);\r\n        });\r\n\r\n        axios.get(`http://localhost:3053/platos/postres`, {}).then((response) => {\r\n            var lista = [];\r\n            var listaCompleta = [];\r\n            response.data.forEach(element => {\r\n                lista.push(element.nombre);\r\n                listaCompleta.push(element);\r\n            });\r\n            setPostres(lista);\r\n            setPostresCompletos(listaCompleta);\r\n        });\r\n\r\n        axios.get(`http://localhost:3053/platos/bebidas`, {}).then((response) => {\r\n            var lista = [];\r\n            var listaCompleta = [];\r\n            response.data.forEach(element => {\r\n                lista.push(element.nombre);\r\n                listaCompleta.push(element);\r\n            });\r\n            setBebidas(lista);\r\n            setBebidassCompletos(listaCompleta);\r\n        });\r\n    }\r\n\r\n    const primerPlato = (plato) => {\r\n        primerosCompletos.forEach(element => {\r\n            if(element.nombre === plato){\r\n                argumentos.primero(argumentos.posicion, element);\r\n            }\r\n        })\r\n    }\r\n\r\n    const segundoPlato = (plato) => {\r\n        segundosCompletos.forEach(element => {\r\n            if(element.nombre === plato){\r\n                argumentos.segundo(argumentos.posicion, element);\r\n            }\r\n        })\r\n    }\r\n\r\n    const postrePlato = (plato) => {\r\n        postresCompletos.forEach(element => {\r\n            if(element.nombre === plato){\r\n                argumentos.postre(argumentos.posicion, element);\r\n            }\r\n        })\r\n    }\r\n\r\n    const bebidaElegida = (plato) => {\r\n        bebidasCompletos.forEach(element => {\r\n            if(element.nombre === plato){\r\n                argumentos.bebida(argumentos.posicion, element);\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    return (        \r\n    <Card\r\n        sx={{height: '100%', display: 'flex', flexDirection: 'column'}} spacing={1}\r\n    >\r\n        <CardContent sx={{ flexGrow: 1 }} > \r\n            <Container\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                maxWidth=\"md\"\r\n                \r\n            >\r\n                <Grid container spacing={1}>\r\n                    {<img src={m} alt=\"Mesa\"  />}\r\n                    <Autocomplete\r\n                        fullWidth\r\n                        options={primeros}\r\n                        autoHighlight\r\n                        value={seleccionPrimero}\r\n                        inputValue={seleccionPrimero}\r\n                        onChange={(event, primero) => {\r\n                            setSeleccionPrimero(primero);\r\n                            primerPlato(primero);\r\n                        }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Primero\"/>}\r\n                    />\r\n\r\n                    <Autocomplete\r\n                        fullWidth\r\n                        options={segundos}\r\n                        value={seleccionSegundo}\r\n                        inputValue={seleccionSegundo}\r\n                        onChange={(event, segundo) => {\r\n                            setSeleccionSegundo(segundo);\r\n                            segundoPlato(segundo);\r\n                        }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Segundo\"/>}\r\n                    />\r\n\r\n                    <Autocomplete\r\n                        fullWidth\r\n                        options={postres}\r\n                        value={seleccionPostre}\r\n                        inputValue={seleccionPostre}\r\n                        onChange={(event, postre) => {\r\n                            setSeleccionPostre(postre);\r\n                            postrePlato(postre);\r\n                        }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Postre\"/>}\r\n                    />\r\n\r\n                    <Autocomplete\r\n                        fullWidth\r\n                        options={bebidas}\r\n                        value={seleccionBebida}\r\n                        inputValue={seleccionBebida}\r\n                        onChange={(event, bebida) => {\r\n                            setSeleccionBebida(bebida);\r\n                            bebidaElegida(bebida);\r\n                        }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Bebida\"/>}\r\n                    />\r\n\r\n                    <TextField\r\n                        name=\"intolerancias\"\r\n                        label=\"intolerancias\"\r\n                        type=\"text\"\r\n                        id=\"intolerancias\"\r\n                    />\r\n\r\n                    <TextField\r\n                    fullWidth\r\n                    name=\"aclaraciones\"\r\n                    label=\"Aclaraciones\"\r\n                    type=\"text\"\r\n                    id=\"aclaraciones\"\r\n                    />\r\n\r\n                    <Typography align='center'> Pan incluido</Typography>\r\n                </Grid>\r\n            </Container>\r\n\r\n            \r\n        </CardContent>\r\n    </Card>\r\n\r\n\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}